#!/usr/bin/env python

try:
    import waflib
    is_samba_waf = False
except ImportError:
    is_samba_waf = True

if is_samba_waf:
    import os
    os.chdir(os.environ['SAMBA_DIR'])
    execfile("wscript")
    Options.launch_dir = os.getcwd()
else:
    import os

    top = '.'
    out = 'build'
    AR32 = ['i386', 'i586', 'i686']
    AR64 = ['x86_64', 'amd64']
    TC = ['mingw32', 'mingw32msvc', 'w64-mingw32']

    def options(ctx):
        ctx.load('compiler_c')
        ctx.add_option('--samba-dir', action='store', default='../samba', help='samba directory location', dest='samba_dir')

    def distclean(ctx):
        import shutil
        shutil.rmtree(ctx.options.samba_dir + "/bin", ignore_errors=True)
        shutil.rmtree(out, ignore_errors=True)

    def configure(ctx):
        ctx.env.samba_dir = os.path.abspath(ctx.options.samba_dir)
        ctx.load('compiler_c')

        ctx.setenv('win32', ctx.env)
        ctx.find_program([ a + '-' + t + '-gcc' for a in AR32 for t in TC], var='CC_WIN32')
        ctx.env.update({"CC": ctx.env.CC_WIN32, "LINK_CC": ctx.env.CC_WIN32})

        ctx.setenv('win64', ctx.env)
        ctx.find_program([ a + '-' + t + '-gcc' for a in AR64 for t in TC], var='CC_WIN64')
        ctx.env.update({"CC": ctx.env.CC_WIN64, "LINK_CC": ctx.env.CC_WIN64})

        os.system('SAMBA_DIR=%(sd)s %(sd)s/buildtools/bin/waf configure --nonshared-binary=winexe' % {'sd': ctx.env.samba_dir})
